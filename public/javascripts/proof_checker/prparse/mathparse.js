/* parser generated by jison 0.4.13 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var mathparse = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"top":3,"e":4,"EOF":5,"\\\\T":6,"\\\\F":7,"\\\\vee":8,"\\\\implies":9,"\\\\bicond":10,"\\\\xor":11,"\\\\wedge":12,"\\\\neg":13,"\\\\forall":14,"vardecllist":15,":":16,"\\\\exists":17,"=":18,"\\\\logeq":19,"\\\\le":20,"\\\\ge":21,"<":22,">":23,"+":24,"-":25,"\\\\cdot":26,"/":27,"^":28,"\\\\cup":29,"\\\\cap":30,"\\\\times":31,"\\\\backslash":32,"\\\\powset":33,"{":34,"}":35,"[":36,"\\\\ldots":37,"]":38,"\\\\emptyset":39,"\\\\integers":40,"\\\\rationals":41,"\\\\reals":42,"\\\\naturals":43,"\\\\in":44,"\\\\subseteq":45,"\\\\supseteq":46,"\\\\subset":47,"\\\\supset":48,"\\\\{":49,"|":50,"\\\\}":51,"\\\\relation":52,"\\\\to":53,"exprlist":54,".":55,"(":56,")":57,"recorddecllist":58,"tupleexprlist":59,"NUMBER":60,"SYMBOL":61,"STRING":62,"\\\\lambda":63,"if":64,"then":65,"else":66,"endif":67,",":68,"vardecl":69,"vardecllist1":70,"recorddecl":71,"\\\\mapsto":72,"recorddecllist1":73,"symlist":74,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",6:"\\\\T",7:"\\\\F",8:"\\\\vee",9:"\\\\implies",10:"\\\\bicond",11:"\\\\xor",12:"\\\\wedge",13:"\\\\neg",14:"\\\\forall",16:":",17:"\\\\exists",18:"=",19:"\\\\logeq",20:"\\\\le",21:"\\\\ge",22:"<",23:">",24:"+",25:"-",26:"\\\\cdot",27:"/",28:"^",29:"\\\\cup",30:"\\\\cap",31:"\\\\times",32:"\\\\backslash",33:"\\\\powset",34:"{",35:"}",36:"[",37:"\\\\ldots",38:"]",39:"\\\\emptyset",40:"\\\\integers",41:"\\\\rationals",42:"\\\\reals",43:"\\\\naturals",44:"\\\\in",45:"\\\\subseteq",46:"\\\\supseteq",47:"\\\\subset",48:"\\\\supset",49:"\\\\{",50:"|",51:"\\\\}",52:"\\\\relation",53:"\\\\to",55:".",56:"(",57:")",60:"NUMBER",61:"SYMBOL",62:"STRING",63:"\\\\lambda",64:"if",65:"then",66:"else",67:"endif",68:",",72:"\\\\mapsto"},
productions_: [0,[3,2],[4,1],[4,1],[4,3],[4,3],[4,3],[4,3],[4,3],[4,2],[4,4],[4,4],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,2],[4,3],[4,3],[4,3],[4,3],[4,4],[4,5],[4,1],[4,1],[4,1],[4,1],[4,1],[4,3],[4,3],[4,3],[4,3],[4,3],[4,7],[4,6],[4,3],[4,3],[4,4],[4,3],[4,3],[4,3],[4,3],[4,1],[4,1],[4,1],[4,4],[4,7],[4,5],[54,1],[54,3],[59,3],[59,3],[69,3],[69,1],[70,3],[70,1],[15,1],[71,3],[73,3],[73,1],[58,1],[74,3],[74,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1: return $$[$0-1]; 
break;
case 2: this.$ = exprProto.trueVal; 
break;
case 3: this.$ = exprProto.falseVal; 
break;
case 4:this.$ = makeExpr('\\vee', [$$[$0-2], $$[$0]]);
break;
case 5:this.$ = makeExpr('\\implies', [$$[$0-2], $$[$0]]);
break;
case 6:this.$ = makeExpr('\\bicond', [$$[$0-2], $$[$0]]);
break;
case 7:this.$ = makeExpr('\\xor', [$$[$0-2], $$[$0]]);
break;
case 8:this.$ = makeExpr('\\wedge', [$$[$0-2], $$[$0]]);
break;
case 9:this.$ = makeExpr('\\neg', [$$[$0]]);
break;
case 10:this.$ = makeExpr('\\forall', [$$[$0-2], $$[$0]]); 
break;
case 11:this.$ = makeExpr('\\exists', [$$[$0-2], $$[$0]]); 
break;
case 12:this.$ = makeExpr('=', [$$[$0-2], $$[$0]]); 
break;
case 13:this.$ = makeExpr('\\logeq', [$$[$0-2], $$[$0]]); 
break;
case 14:this.$ = makeExpr('\\le', [$$[$0-2], $$[$0] ]); 
break;
case 15:this.$ = makeExpr('\\ge', [$$[$0-2], $$[$0]]); 
break;
case 16:this.$ = makeExpr('<', [$$[$0-2], $$[$0]]); 
break;
case 17:this.$ = makeExpr('>', [$$[$0-2], $$[$0]]); 
break;
case 18:this.$ = makeExpr('+', [$$[$0-2], $$[$0]]);
break;
case 19:this.$ = makeExpr('-', [$$[$0-2], $$[$0]]);
break;
case 20:this.$ = makeExpr('\\cdot', [$$[$0-2], $$[$0]]);
break;
case 21:this.$ = makeExpr('/', [$$[$0-2], $$[$0]]);
break;
case 22:this.$ = makeExpr('^', [$$[$0-2], $$[$0]]);
break;
case 23:this.$ = makeExpr('#UMINUS', [$$[$0]]);
break;
case 24:this.$ = makeExpr('\\cup', [$$[$0-2], $$[$0]]);
break;
case 25:this.$ = makeExpr('\\cap', [$$[$0-2], $$[$0]]);
break;
case 26:this.$ = makeExpr('\\times', [$$[$0-2], $$[$0]]);
break;
case 27:this.$ = makeExpr('\\backslash', [$$[$0-2], $$[$0]]);
break;
case 28:this.$ = makeExpr('\\powset', [$$[$0-3], $$[$0-1]]);
break;
case 29: this.$ = makeExpr('\\ldots', [$$[$0-3], $$[$0-1]]); 
break;
case 30:this.$ = makeExpr('\\emptyset', []);
break;
case 31:this.$ = makeExpr('\\integers', []);
break;
case 32:this.$ = makeExpr('\\rationals', []);
break;
case 33:this.$ = makeExpr('\\reals', []);
break;
case 34:this.$ = makeExpr('\\naturals', []);
break;
case 35:this.$ = makeExpr('\\in', [$$[$0-2], $$[$0] ]); 
break;
case 36:this.$ = makeExpr('\\subseteq', [$$[$0-2], $$[$0]]);
break;
case 37:this.$ = makeExpr('\\supseteq', [$$[$0-2], $$[$0]]);
break;
case 38:this.$ = makeExpr('\\subset', [$$[$0-2], $$[$0]]);
break;
case 39:this.$ = makeExpr('\\supset', [$$[$0-2], $$[$0]]); 
break;
case 40:
          this.$ = makeExpr('comprehension', [$$[$0-5], $$[$0-3], $$[$0-1]]);
      
break;
case 41:
	this.$ = makeExpr('\\relation', [$$[$0-4], $$[$0-2], $$[$0]]);
      
break;
case 42: this.$ = makeExpr('Set', $$[$0-1]); 
break;
case 43: this.$ = makeExpr("getfield", [$$[$0-2], $$[$0]]); 
break;
case 44:  /* op in function is Symbol expr */   
         this.$ = makeExpr($$[$0-3], $$[$0-1]); 
break;
case 45: this.$ = makeExpr($$[$0-2], []); 
break;
case 46: this.$ = makeExpr('recordfields', $$[$0-1]); 
break;
case 47: this.$ = makeExpr('Tuple', $$[$0-1]); 
break;
case 48:this.$ = $$[$0-1]; 
break;
case 49:this.$ = makeExpr('Number', [parseInt($$[$0])]) ;
break;
case 50:this.$ = makeExpr('Symbol', [$$[$0]]) ;
break;
case 51: this.$ = makeExpr('String', [$$[$0]]); 
break;
case 52: this.$ = makeExpr('\\lambda', [$$[$0-2], $$[$0] ]); 
break;
case 53: this.$ = makeExpr('ite', [$$[$0-5], $$[$0-3], $$[$0-1] ]); 
break;
case 54: throw new Error("if-then must have else."); 
break;
case 55: this.$ = [ $$[$0]]; 
break;
case 56: $$[$0-2].push($$[$0]);
       this.$ = $$[$0-2];
     
break;
case 57: this.$ = [$$[$0-2], $$[$0]]; 
break;
case 58:
        $$[$0-2].push($$[$0]);
        this.$ = $$[$0-2];
      
break;
case 59: this.$ = makeExpr('vardecl', [makeExpr('Symbol', [$$[$0-2]]), $$[$0] ]); 
break;
case 60: this.$ = makeExpr('vardecl', [makeExpr('Symbol', [$$[$0]]), exprProto.anyMarker]); 
break;
case 61: this.$ = $$[$0-2]; this.$.push($$[$0]); 
break;
case 62: this.$ = [ $$[$0] ]; 
break;
case 63: this.$ = makeExpr('vardecllist', $$[$0]); 
break;
case 64: this.$ = makeExpr("\\mapsto", [$$[$0-2], $$[$0]]); 
break;
case 65: this.$ = $$[$0-2]; this.$.push($$[$0]); 
break;
case 66: this.$ = [ $$[$0] ]; 
break;
case 67: this.$ = $$[$0]; 
break;
case 68: this.$ = $$[$0-2]; this.$.push($$[$0]); 
break;
case 69: this.$ = [ $$[$0] ] ; 
break;
}
},
table: [{3:1,4:2,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{1:[3]},{5:[1,24],8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51]},{5:[2,2],8:[2,2],9:[2,2],10:[2,2],11:[2,2],12:[2,2],16:[2,2],18:[2,2],19:[2,2],20:[2,2],21:[2,2],22:[2,2],23:[2,2],24:[2,2],25:[2,2],26:[2,2],27:[2,2],28:[2,2],29:[2,2],30:[2,2],31:[2,2],32:[2,2],35:[2,2],37:[2,2],38:[2,2],44:[2,2],45:[2,2],46:[2,2],47:[2,2],48:[2,2],50:[2,2],51:[2,2],53:[2,2],55:[2,2],56:[2,2],57:[2,2],65:[2,2],66:[2,2],67:[2,2],68:[2,2]},{5:[2,3],8:[2,3],9:[2,3],10:[2,3],11:[2,3],12:[2,3],16:[2,3],18:[2,3],19:[2,3],20:[2,3],21:[2,3],22:[2,3],23:[2,3],24:[2,3],25:[2,3],26:[2,3],27:[2,3],28:[2,3],29:[2,3],30:[2,3],31:[2,3],32:[2,3],35:[2,3],37:[2,3],38:[2,3],44:[2,3],45:[2,3],46:[2,3],47:[2,3],48:[2,3],50:[2,3],51:[2,3],53:[2,3],55:[2,3],56:[2,3],57:[2,3],65:[2,3],66:[2,3],67:[2,3],68:[2,3]},{4:52,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{15:53,61:[1,56],69:55,70:54},{15:57,61:[1,56],69:55,70:54},{4:58,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{34:[1,59]},{4:60,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],58:61,60:[1,19],61:[1,62],62:[1,21],63:[1,22],64:[1,23],71:64,73:63},{5:[2,30],8:[2,30],9:[2,30],10:[2,30],11:[2,30],12:[2,30],16:[2,30],18:[2,30],19:[2,30],20:[2,30],21:[2,30],22:[2,30],23:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],31:[2,30],32:[2,30],35:[2,30],37:[2,30],38:[2,30],44:[2,30],45:[2,30],46:[2,30],47:[2,30],48:[2,30],50:[2,30],51:[2,30],53:[2,30],55:[2,30],56:[2,30],57:[2,30],65:[2,30],66:[2,30],67:[2,30],68:[2,30]},{5:[2,31],8:[2,31],9:[2,31],10:[2,31],11:[2,31],12:[2,31],16:[2,31],18:[2,31],19:[2,31],20:[2,31],21:[2,31],22:[2,31],23:[2,31],24:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],30:[2,31],31:[2,31],32:[2,31],35:[2,31],37:[2,31],38:[2,31],44:[2,31],45:[2,31],46:[2,31],47:[2,31],48:[2,31],50:[2,31],51:[2,31],53:[2,31],55:[2,31],56:[2,31],57:[2,31],65:[2,31],66:[2,31],67:[2,31],68:[2,31]},{5:[2,32],8:[2,32],9:[2,32],10:[2,32],11:[2,32],12:[2,32],16:[2,32],18:[2,32],19:[2,32],20:[2,32],21:[2,32],22:[2,32],23:[2,32],24:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],30:[2,32],31:[2,32],32:[2,32],35:[2,32],37:[2,32],38:[2,32],44:[2,32],45:[2,32],46:[2,32],47:[2,32],48:[2,32],50:[2,32],51:[2,32],53:[2,32],55:[2,32],56:[2,32],57:[2,32],65:[2,32],66:[2,32],67:[2,32],68:[2,32]},{5:[2,33],8:[2,33],9:[2,33],10:[2,33],11:[2,33],12:[2,33],16:[2,33],18:[2,33],19:[2,33],20:[2,33],21:[2,33],22:[2,33],23:[2,33],24:[2,33],25:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],31:[2,33],32:[2,33],35:[2,33],37:[2,33],38:[2,33],44:[2,33],45:[2,33],46:[2,33],47:[2,33],48:[2,33],50:[2,33],51:[2,33],53:[2,33],55:[2,33],56:[2,33],57:[2,33],65:[2,33],66:[2,33],67:[2,33],68:[2,33]},{5:[2,34],8:[2,34],9:[2,34],10:[2,34],11:[2,34],12:[2,34],16:[2,34],18:[2,34],19:[2,34],20:[2,34],21:[2,34],22:[2,34],23:[2,34],24:[2,34],25:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],30:[2,34],31:[2,34],32:[2,34],35:[2,34],37:[2,34],38:[2,34],44:[2,34],45:[2,34],46:[2,34],47:[2,34],48:[2,34],50:[2,34],51:[2,34],53:[2,34],55:[2,34],56:[2,34],57:[2,34],65:[2,34],66:[2,34],67:[2,34],68:[2,34]},{4:65,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],54:66,56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:67,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:69,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],59:68,60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,49],8:[2,49],9:[2,49],10:[2,49],11:[2,49],12:[2,49],16:[2,49],18:[2,49],19:[2,49],20:[2,49],21:[2,49],22:[2,49],23:[2,49],24:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],30:[2,49],31:[2,49],32:[2,49],35:[2,49],37:[2,49],38:[2,49],44:[2,49],45:[2,49],46:[2,49],47:[2,49],48:[2,49],50:[2,49],51:[2,49],53:[2,49],55:[2,49],56:[2,49],57:[2,49],65:[2,49],66:[2,49],67:[2,49],68:[2,49]},{5:[2,50],8:[2,50],9:[2,50],10:[2,50],11:[2,50],12:[2,50],16:[2,50],18:[2,50],19:[2,50],20:[2,50],21:[2,50],22:[2,50],23:[2,50],24:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],30:[2,50],31:[2,50],32:[2,50],35:[2,50],37:[2,50],38:[2,50],44:[2,50],45:[2,50],46:[2,50],47:[2,50],48:[2,50],50:[2,50],51:[2,50],53:[2,50],55:[2,50],56:[2,50],57:[2,50],65:[2,50],66:[2,50],67:[2,50],68:[2,50]},{5:[2,51],8:[2,51],9:[2,51],10:[2,51],11:[2,51],12:[2,51],16:[2,51],18:[2,51],19:[2,51],20:[2,51],21:[2,51],22:[2,51],23:[2,51],24:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],30:[2,51],31:[2,51],32:[2,51],35:[2,51],37:[2,51],38:[2,51],44:[2,51],45:[2,51],46:[2,51],47:[2,51],48:[2,51],50:[2,51],51:[2,51],53:[2,51],55:[2,51],56:[2,51],57:[2,51],65:[2,51],66:[2,51],67:[2,51],68:[2,51]},{15:70,61:[1,56],69:55,70:54},{4:71,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{1:[2,1]},{4:72,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:73,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:74,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:75,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:76,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:77,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:78,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:79,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:80,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:81,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:82,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:83,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:84,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:85,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:86,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:87,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:88,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:89,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:90,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:91,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:92,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:93,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:94,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:95,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:96,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:97,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:100,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],54:98,56:[1,18],57:[1,99],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,9],8:[2,9],9:[2,9],10:[2,9],11:[2,9],12:[2,9],16:[2,9],18:[1,30],19:[2,9],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,9],37:[2,9],38:[2,9],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,9],51:[2,9],53:[2,9],55:[1,50],56:[1,51],57:[2,9],65:[2,9],66:[2,9],67:[2,9],68:[2,9]},{16:[1,101]},{16:[2,63],68:[1,102]},{16:[2,62],68:[2,62]},{16:[2,60],44:[1,103],68:[2,60]},{16:[1,104]},{5:[2,23],8:[2,23],9:[2,23],10:[2,23],11:[2,23],12:[2,23],16:[2,23],18:[2,23],19:[2,23],20:[2,23],21:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[1,40],29:[2,23],30:[2,23],31:[2,23],32:[2,23],35:[2,23],37:[2,23],38:[2,23],44:[2,23],45:[2,23],46:[2,23],47:[2,23],48:[2,23],50:[2,23],51:[2,23],53:[2,23],55:[1,50],56:[1,51],57:[2,23],65:[2,23],66:[2,23],67:[2,23],68:[2,23]},{4:105,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],37:[1,106],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51]},{38:[1,107]},{8:[2,50],9:[2,50],10:[2,50],11:[2,50],12:[2,50],18:[2,50],19:[2,50],20:[2,50],21:[2,50],22:[2,50],23:[2,50],24:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],30:[2,50],31:[2,50],32:[2,50],37:[2,50],44:[2,50],45:[2,50],46:[2,50],47:[2,50],48:[2,50],55:[2,50],56:[2,50],72:[1,108]},{38:[2,67],68:[1,109]},{38:[2,66],68:[2,66]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[1,110],51:[2,55],55:[1,50],56:[1,51],68:[2,55]},{51:[1,111],68:[1,112]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],53:[1,113],55:[1,50],56:[1,51]},{57:[1,114],68:[1,115]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],57:[1,116],68:[1,117]},{16:[1,118]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],65:[1,119]},{5:[2,4],8:[2,4],9:[2,4],10:[2,4],11:[2,4],12:[1,29],16:[2,4],18:[1,30],19:[2,4],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,4],37:[2,4],38:[2,4],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,4],51:[2,4],53:[2,4],55:[1,50],56:[1,51],57:[2,4],65:[2,4],66:[2,4],67:[2,4],68:[2,4]},{5:[2,5],8:[1,25],10:[1,27],11:[1,28],12:[1,29],16:[2,5],18:[1,30],19:[2,5],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,5],37:[2,5],38:[2,5],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,5],51:[2,5],53:[2,5],55:[1,50],56:[1,51],57:[2,5],65:[2,5],66:[2,5],67:[2,5],68:[2,5]},{5:[2,6],8:[1,25],9:[2,6],10:[2,6],11:[2,6],12:[1,29],16:[2,6],18:[1,30],19:[2,6],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,6],37:[2,6],38:[2,6],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,6],51:[2,6],53:[2,6],55:[1,50],56:[1,51],57:[2,6],65:[2,6],66:[2,6],67:[2,6],68:[2,6]},{5:[2,7],8:[1,25],9:[2,7],10:[2,7],11:[2,7],12:[1,29],16:[2,7],18:[1,30],19:[2,7],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,7],37:[2,7],38:[2,7],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,7],51:[2,7],53:[2,7],55:[1,50],56:[1,51],57:[2,7],65:[2,7],66:[2,7],67:[2,7],68:[2,7]},{5:[2,8],8:[2,8],9:[2,8],10:[2,8],11:[2,8],12:[2,8],16:[2,8],18:[1,30],19:[2,8],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,8],37:[2,8],38:[2,8],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,8],51:[2,8],53:[2,8],55:[1,50],56:[1,51],57:[2,8],65:[2,8],66:[2,8],67:[2,8],68:[2,8]},{5:[2,12],8:[2,12],9:[2,12],10:[2,12],11:[2,12],12:[2,12],16:[2,12],19:[2,12],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,12],30:[2,12],31:[2,12],32:[2,12],35:[2,12],37:[2,12],38:[2,12],44:[2,12],45:[2,12],46:[2,12],47:[2,12],48:[2,12],50:[2,12],51:[2,12],53:[2,12],55:[1,50],56:[1,51],57:[2,12],65:[2,12],66:[2,12],67:[2,12],68:[2,12]},{5:[2,13],8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],16:[2,13],18:[1,30],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,13],37:[2,13],38:[2,13],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,13],51:[2,13],53:[2,13],55:[1,50],56:[1,51],57:[2,13],65:[2,13],66:[2,13],67:[2,13],68:[2,13]},{5:[2,14],8:[2,14],9:[2,14],10:[2,14],11:[2,14],12:[2,14],16:[2,14],19:[2,14],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,14],30:[2,14],31:[2,14],32:[2,14],35:[2,14],37:[2,14],38:[2,14],44:[2,14],45:[2,14],46:[2,14],47:[2,14],48:[2,14],50:[2,14],51:[2,14],53:[2,14],55:[1,50],56:[1,51],57:[2,14],65:[2,14],66:[2,14],67:[2,14],68:[2,14]},{5:[2,15],8:[2,15],9:[2,15],10:[2,15],11:[2,15],12:[2,15],16:[2,15],19:[2,15],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,15],30:[2,15],31:[2,15],32:[2,15],35:[2,15],37:[2,15],38:[2,15],44:[2,15],45:[2,15],46:[2,15],47:[2,15],48:[2,15],50:[2,15],51:[2,15],53:[2,15],55:[1,50],56:[1,51],57:[2,15],65:[2,15],66:[2,15],67:[2,15],68:[2,15]},{5:[2,16],8:[2,16],9:[2,16],10:[2,16],11:[2,16],12:[2,16],16:[2,16],19:[2,16],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,16],30:[2,16],31:[2,16],32:[2,16],35:[2,16],37:[2,16],38:[2,16],44:[2,16],45:[2,16],46:[2,16],47:[2,16],48:[2,16],50:[2,16],51:[2,16],53:[2,16],55:[1,50],56:[1,51],57:[2,16],65:[2,16],66:[2,16],67:[2,16],68:[2,16]},{5:[2,17],8:[2,17],9:[2,17],10:[2,17],11:[2,17],12:[2,17],16:[2,17],19:[2,17],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,17],30:[2,17],31:[2,17],32:[2,17],35:[2,17],37:[2,17],38:[2,17],44:[2,17],45:[2,17],46:[2,17],47:[2,17],48:[2,17],50:[2,17],51:[2,17],53:[2,17],55:[1,50],56:[1,51],57:[2,17],65:[2,17],66:[2,17],67:[2,17],68:[2,17]},{5:[2,18],8:[2,18],9:[2,18],10:[2,18],11:[2,18],12:[2,18],16:[2,18],18:[2,18],19:[2,18],20:[2,18],21:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[1,38],27:[1,39],28:[1,40],29:[2,18],30:[2,18],31:[2,18],32:[2,18],35:[2,18],37:[2,18],38:[2,18],44:[2,18],45:[2,18],46:[2,18],47:[2,18],48:[2,18],50:[2,18],51:[2,18],53:[2,18],55:[1,50],56:[1,51],57:[2,18],65:[2,18],66:[2,18],67:[2,18],68:[2,18]},{5:[2,19],8:[2,19],9:[2,19],10:[2,19],11:[2,19],12:[2,19],16:[2,19],18:[2,19],19:[2,19],20:[2,19],21:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[1,38],27:[1,39],28:[1,40],29:[2,19],30:[2,19],31:[2,19],32:[2,19],35:[2,19],37:[2,19],38:[2,19],44:[2,19],45:[2,19],46:[2,19],47:[2,19],48:[2,19],50:[2,19],51:[2,19],53:[2,19],55:[1,50],56:[1,51],57:[2,19],65:[2,19],66:[2,19],67:[2,19],68:[2,19]},{5:[2,20],8:[2,20],9:[2,20],10:[2,20],11:[2,20],12:[2,20],16:[2,20],18:[2,20],19:[2,20],20:[2,20],21:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[1,40],29:[2,20],30:[2,20],31:[2,20],32:[2,20],35:[2,20],37:[2,20],38:[2,20],44:[2,20],45:[2,20],46:[2,20],47:[2,20],48:[2,20],50:[2,20],51:[2,20],53:[2,20],55:[1,50],56:[1,51],57:[2,20],65:[2,20],66:[2,20],67:[2,20],68:[2,20]},{5:[2,21],8:[2,21],9:[2,21],10:[2,21],11:[2,21],12:[2,21],16:[2,21],18:[2,21],19:[2,21],20:[2,21],21:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[1,40],29:[2,21],30:[2,21],31:[2,21],32:[2,21],35:[2,21],37:[2,21],38:[2,21],44:[2,21],45:[2,21],46:[2,21],47:[2,21],48:[2,21],50:[2,21],51:[2,21],53:[2,21],55:[1,50],56:[1,51],57:[2,21],65:[2,21],66:[2,21],67:[2,21],68:[2,21]},{5:[2,22],8:[2,22],9:[2,22],10:[2,22],11:[2,22],12:[2,22],16:[2,22],18:[2,22],19:[2,22],20:[2,22],21:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[1,40],29:[2,22],30:[2,22],31:[2,22],32:[2,22],35:[2,22],37:[2,22],38:[2,22],44:[2,22],45:[2,22],46:[2,22],47:[2,22],48:[2,22],50:[2,22],51:[2,22],53:[2,22],55:[1,50],56:[1,51],57:[2,22],65:[2,22],66:[2,22],67:[2,22],68:[2,22]},{5:[2,24],8:[2,24],9:[2,24],10:[2,24],11:[2,24],12:[2,24],16:[2,24],18:[1,30],19:[2,24],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,24],30:[1,42],31:[1,43],32:[2,24],35:[2,24],37:[2,24],38:[2,24],44:[2,24],45:[2,24],46:[2,24],47:[2,24],48:[2,24],50:[2,24],51:[2,24],53:[2,24],55:[1,50],56:[1,51],57:[2,24],65:[2,24],66:[2,24],67:[2,24],68:[2,24]},{5:[2,25],8:[2,25],9:[2,25],10:[2,25],11:[2,25],12:[2,25],16:[2,25],18:[1,30],19:[2,25],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,25],30:[2,25],31:[1,43],32:[2,25],35:[2,25],37:[2,25],38:[2,25],44:[2,25],45:[2,25],46:[2,25],47:[2,25],48:[2,25],50:[2,25],51:[2,25],53:[2,25],55:[1,50],56:[1,51],57:[2,25],65:[2,25],66:[2,25],67:[2,25],68:[2,25]},{5:[2,26],8:[2,26],9:[2,26],10:[2,26],11:[2,26],12:[2,26],16:[2,26],18:[1,30],19:[2,26],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,26],30:[2,26],31:[2,26],32:[2,26],35:[2,26],37:[2,26],38:[2,26],44:[2,26],45:[2,26],46:[2,26],47:[2,26],48:[2,26],50:[2,26],51:[2,26],53:[2,26],55:[1,50],56:[1,51],57:[2,26],65:[2,26],66:[2,26],67:[2,26],68:[2,26]},{5:[2,27],8:[2,27],9:[2,27],10:[2,27],11:[2,27],12:[2,27],16:[2,27],18:[1,30],19:[2,27],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,27],30:[1,42],31:[1,43],32:[2,27],35:[2,27],37:[2,27],38:[2,27],44:[2,27],45:[2,27],46:[2,27],47:[2,27],48:[2,27],50:[2,27],51:[2,27],53:[2,27],55:[1,50],56:[1,51],57:[2,27],65:[2,27],66:[2,27],67:[2,27],68:[2,27]},{5:[2,35],8:[2,35],9:[2,35],10:[2,35],11:[2,35],12:[2,35],16:[2,35],18:[1,30],19:[2,35],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,35],37:[2,35],38:[2,35],45:[2,35],46:[2,35],47:[2,35],48:[2,35],50:[2,35],51:[2,35],53:[2,35],55:[1,50],56:[1,51],57:[2,35],65:[2,35],66:[2,35],67:[2,35],68:[2,35]},{5:[2,36],8:[2,36],9:[2,36],10:[2,36],11:[2,36],12:[2,36],16:[2,36],18:[1,30],19:[2,36],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,36],37:[2,36],38:[2,36],44:[1,45],50:[2,36],51:[2,36],53:[2,36],55:[1,50],56:[1,51],57:[2,36],65:[2,36],66:[2,36],67:[2,36],68:[2,36]},{5:[2,37],8:[2,37],9:[2,37],10:[2,37],11:[2,37],12:[2,37],16:[2,37],18:[1,30],19:[2,37],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,37],37:[2,37],38:[2,37],44:[1,45],50:[2,37],51:[2,37],53:[2,37],55:[1,50],56:[1,51],57:[2,37],65:[2,37],66:[2,37],67:[2,37],68:[2,37]},{5:[2,38],8:[2,38],9:[2,38],10:[2,38],11:[2,38],12:[2,38],16:[2,38],18:[1,30],19:[2,38],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,38],37:[2,38],38:[2,38],44:[1,45],50:[2,38],51:[2,38],53:[2,38],55:[1,50],56:[1,51],57:[2,38],65:[2,38],66:[2,38],67:[2,38],68:[2,38]},{5:[2,39],8:[2,39],9:[2,39],10:[2,39],11:[2,39],12:[2,39],16:[2,39],18:[1,30],19:[2,39],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,39],37:[2,39],38:[2,39],44:[1,45],50:[2,39],51:[2,39],53:[2,39],55:[1,50],56:[1,51],57:[2,39],65:[2,39],66:[2,39],67:[2,39],68:[2,39]},{5:[2,43],8:[2,43],9:[2,43],10:[2,43],11:[2,43],12:[2,43],16:[2,43],18:[2,43],19:[2,43],20:[2,43],21:[2,43],22:[2,43],23:[2,43],24:[2,43],25:[2,43],26:[2,43],27:[2,43],28:[2,43],29:[2,43],30:[2,43],31:[2,43],32:[2,43],35:[2,43],37:[2,43],38:[2,43],44:[2,43],45:[2,43],46:[2,43],47:[2,43],48:[2,43],50:[2,43],51:[2,43],53:[2,43],55:[2,43],56:[2,43],57:[2,43],65:[2,43],66:[2,43],67:[2,43],68:[2,43]},{57:[1,120],68:[1,112]},{5:[2,45],8:[2,45],9:[2,45],10:[2,45],11:[2,45],12:[2,45],16:[2,45],18:[2,45],19:[2,45],20:[2,45],21:[2,45],22:[2,45],23:[2,45],24:[2,45],25:[2,45],26:[2,45],27:[2,45],28:[2,45],29:[2,45],30:[2,45],31:[2,45],32:[2,45],35:[2,45],37:[2,45],38:[2,45],44:[2,45],45:[2,45],46:[2,45],47:[2,45],48:[2,45],50:[2,45],51:[2,45],53:[2,45],55:[2,45],56:[2,45],57:[2,45],65:[2,45],66:[2,45],67:[2,45],68:[2,45]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],57:[2,55],68:[2,55]},{4:121,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{61:[1,56],69:122},{4:123,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:124,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[1,125],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51]},{4:126,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,46],8:[2,46],9:[2,46],10:[2,46],11:[2,46],12:[2,46],16:[2,46],18:[2,46],19:[2,46],20:[2,46],21:[2,46],22:[2,46],23:[2,46],24:[2,46],25:[2,46],26:[2,46],27:[2,46],28:[2,46],29:[2,46],30:[2,46],31:[2,46],32:[2,46],35:[2,46],37:[2,46],38:[2,46],44:[2,46],45:[2,46],46:[2,46],47:[2,46],48:[2,46],50:[2,46],51:[2,46],53:[2,46],55:[2,46],56:[2,46],57:[2,46],65:[2,46],66:[2,46],67:[2,46],68:[2,46]},{4:127,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{61:[1,129],71:128},{15:130,61:[1,56],69:55,70:54},{5:[2,42],8:[2,42],9:[2,42],10:[2,42],11:[2,42],12:[2,42],16:[2,42],18:[2,42],19:[2,42],20:[2,42],21:[2,42],22:[2,42],23:[2,42],24:[2,42],25:[2,42],26:[2,42],27:[2,42],28:[2,42],29:[2,42],30:[2,42],31:[2,42],32:[2,42],35:[2,42],37:[2,42],38:[2,42],44:[2,42],45:[2,42],46:[2,42],47:[2,42],48:[2,42],50:[2,42],51:[2,42],53:[2,42],55:[2,42],56:[2,42],57:[2,42],65:[2,42],66:[2,42],67:[2,42],68:[2,42]},{4:131,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:132,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,47],8:[2,47],9:[2,47],10:[2,47],11:[2,47],12:[2,47],16:[2,47],18:[2,47],19:[2,47],20:[2,47],21:[2,47],22:[2,47],23:[2,47],24:[2,47],25:[2,47],26:[2,47],27:[2,47],28:[2,47],29:[2,47],30:[2,47],31:[2,47],32:[2,47],35:[2,47],37:[2,47],38:[2,47],44:[2,47],45:[2,47],46:[2,47],47:[2,47],48:[2,47],50:[2,47],51:[2,47],53:[2,47],55:[2,47],56:[2,47],57:[2,47],65:[2,47],66:[2,47],67:[2,47],68:[2,47]},{4:133,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,48],8:[2,48],9:[2,48],10:[2,48],11:[2,48],12:[2,48],16:[2,48],18:[2,48],19:[2,48],20:[2,48],21:[2,48],22:[2,48],23:[2,48],24:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],30:[2,48],31:[2,48],32:[2,48],35:[2,48],37:[2,48],38:[2,48],44:[2,48],45:[2,48],46:[2,48],47:[2,48],48:[2,48],50:[2,48],51:[2,48],53:[2,48],55:[2,48],56:[2,48],57:[2,48],65:[2,48],66:[2,48],67:[2,48],68:[2,48]},{4:134,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:135,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:136,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,44],8:[2,44],9:[2,44],10:[2,44],11:[2,44],12:[2,44],16:[2,44],18:[2,44],19:[2,44],20:[2,44],21:[2,44],22:[2,44],23:[2,44],24:[2,44],25:[2,44],26:[2,44],27:[2,44],28:[2,44],29:[2,44],30:[2,44],31:[2,44],32:[2,44],35:[2,44],37:[2,44],38:[2,44],44:[2,44],45:[2,44],46:[2,44],47:[2,44],48:[2,44],50:[2,44],51:[2,44],53:[2,44],55:[2,44],56:[2,44],57:[2,44],65:[2,44],66:[2,44],67:[2,44],68:[2,44]},{5:[2,10],8:[2,10],9:[2,10],10:[2,10],11:[2,10],12:[2,10],16:[2,10],18:[1,30],19:[2,10],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,10],30:[2,10],31:[2,10],32:[2,10],35:[2,10],37:[2,10],38:[2,10],44:[2,10],45:[2,10],46:[2,10],47:[2,10],48:[2,10],50:[2,10],51:[2,10],53:[2,10],55:[1,50],56:[1,51],57:[2,10],65:[2,10],66:[2,10],67:[2,10],68:[2,10]},{16:[2,61],68:[2,61]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],16:[2,59],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],68:[2,59]},{5:[2,11],8:[2,11],9:[2,11],10:[2,11],11:[2,11],12:[2,11],16:[2,11],18:[1,30],19:[2,11],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[2,11],30:[2,11],31:[2,11],32:[2,11],35:[2,11],37:[2,11],38:[2,11],44:[2,11],45:[2,11],46:[2,11],47:[2,11],48:[2,11],50:[2,11],51:[2,11],53:[2,11],55:[1,50],56:[1,51],57:[2,11],65:[2,11],66:[2,11],67:[2,11],68:[2,11]},{5:[2,28],8:[2,28],9:[2,28],10:[2,28],11:[2,28],12:[2,28],16:[2,28],18:[2,28],19:[2,28],20:[2,28],21:[2,28],22:[2,28],23:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],30:[2,28],31:[2,28],32:[2,28],35:[2,28],37:[2,28],38:[2,28],44:[2,28],45:[2,28],46:[2,28],47:[2,28],48:[2,28],50:[2,28],51:[2,28],53:[2,28],55:[2,28],56:[2,28],57:[2,28],65:[2,28],66:[2,28],67:[2,28],68:[2,28]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],38:[1,137],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],38:[2,64],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],68:[2,64]},{38:[2,65],68:[2,65]},{72:[1,108]},{16:[1,138]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],51:[2,56],55:[1,50],56:[1,51],57:[2,56],68:[2,56]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],16:[1,139],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],57:[2,58],68:[2,58]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],57:[2,57],68:[2,57]},{5:[2,52],8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],16:[2,52],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,52],37:[2,52],38:[2,52],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,52],51:[2,52],53:[2,52],55:[1,50],56:[1,51],57:[2,52],65:[2,52],66:[2,52],67:[2,52],68:[2,52]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],66:[1,140],67:[1,141]},{5:[2,29],8:[2,29],9:[2,29],10:[2,29],11:[2,29],12:[2,29],16:[2,29],18:[2,29],19:[2,29],20:[2,29],21:[2,29],22:[2,29],23:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],31:[2,29],32:[2,29],35:[2,29],37:[2,29],38:[2,29],44:[2,29],45:[2,29],46:[2,29],47:[2,29],48:[2,29],50:[2,29],51:[2,29],53:[2,29],55:[2,29],56:[2,29],57:[2,29],65:[2,29],66:[2,29],67:[2,29],68:[2,29]},{4:142,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:143,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{4:144,6:[1,3],7:[1,4],13:[1,5],14:[1,6],17:[1,7],25:[1,8],33:[1,9],36:[1,10],39:[1,11],40:[1,12],41:[1,13],42:[1,14],43:[1,15],49:[1,16],52:[1,17],56:[1,18],60:[1,19],61:[1,20],62:[1,21],63:[1,22],64:[1,23]},{5:[2,54],8:[2,54],9:[2,54],10:[2,54],11:[2,54],12:[2,54],16:[2,54],18:[2,54],19:[2,54],20:[2,54],21:[2,54],22:[2,54],23:[2,54],24:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],30:[2,54],31:[2,54],32:[2,54],35:[2,54],37:[2,54],38:[2,54],44:[2,54],45:[2,54],46:[2,54],47:[2,54],48:[2,54],50:[2,54],51:[2,54],53:[2,54],55:[2,54],56:[2,54],57:[2,54],65:[2,54],66:[2,54],67:[2,54],68:[2,54]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],51:[1,145],55:[1,50],56:[1,51]},{5:[2,41],8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],16:[2,41],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],35:[2,41],37:[2,41],38:[2,41],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],50:[2,41],51:[2,41],53:[2,41],55:[1,50],56:[1,51],57:[2,41],65:[2,41],66:[2,41],67:[2,41],68:[2,41]},{8:[1,25],9:[1,26],10:[1,27],11:[1,28],12:[1,29],18:[1,30],19:[1,31],20:[1,32],21:[1,33],22:[1,34],23:[1,35],24:[1,36],25:[1,37],26:[1,38],27:[1,39],28:[1,40],29:[1,41],30:[1,42],31:[1,43],32:[1,44],44:[1,45],45:[1,46],46:[1,47],47:[1,48],48:[1,49],55:[1,50],56:[1,51],67:[1,146]},{5:[2,40],8:[2,40],9:[2,40],10:[2,40],11:[2,40],12:[2,40],16:[2,40],18:[2,40],19:[2,40],20:[2,40],21:[2,40],22:[2,40],23:[2,40],24:[2,40],25:[2,40],26:[2,40],27:[2,40],28:[2,40],29:[2,40],30:[2,40],31:[2,40],32:[2,40],35:[2,40],37:[2,40],38:[2,40],44:[2,40],45:[2,40],46:[2,40],47:[2,40],48:[2,40],50:[2,40],51:[2,40],53:[2,40],55:[2,40],56:[2,40],57:[2,40],65:[2,40],66:[2,40],67:[2,40],68:[2,40]},{5:[2,53],8:[2,53],9:[2,53],10:[2,53],11:[2,53],12:[2,53],16:[2,53],18:[2,53],19:[2,53],20:[2,53],21:[2,53],22:[2,53],23:[2,53],24:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],30:[2,53],31:[2,53],32:[2,53],35:[2,53],37:[2,53],38:[2,53],44:[2,53],45:[2,53],46:[2,53],47:[2,53],48:[2,53],50:[2,53],51:[2,53],53:[2,53],55:[2,53],56:[2,53],57:[2,53],65:[2,53],66:[2,53],67:[2,53],68:[2,53]}],
defaultActions: {24:[2,1]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                this.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

/* Global variables */
   var _label;			// holds label during grammar actions.
/* generated by jison-lex 0.2.1 */
var lexer = (function(){
var lexer = {

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input) {
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:/* skip whitespace */
break;
case 1:/* comment (suboptimal, but easy) */
break;
case 2:return 'function';
break;
case 3:return 'eval';
break;
case 4:return 'domain'
break;
case 5:return 'codomain'
break;
case 6: yy_.yytext=yy_.yytext.substring(1, yy_.yytext.length-1); return 62; 
break;
case 7:return ';';
break;
case 8:return 50;
break;
case 9:return 6;
break;
case 10:return 6;
break;
case 11:return 7;
break;
case 12:return 7;
break;
case 13:return 56
break;
case 14:return 57
break;
case 15:return 49
break;
case 16:return 51
break;
case 17:return 68
break;
case 18:return 16
break;
case 19:return 31
break;
case 20:return 27
break;
case 21:return 25
break;
case 22:return 24
break;
case 23:return 26
break;
case 24:return 26
break;
case 25:return 28
break;
case 26:return 19
break;
case 27:return 19
break;
case 28:return 18
break;
case 29:return '\\ne'
break;
case 30:return 21
break;
case 31:return 21
break;
case 32:return 20
break;
case 33:return 20
break;
case 34:return 22
break;
case 35:return 23
break;
case 36:return 36
break;
case 37:return 38
break;
case 38:return 40
break;
case 39:return 42
break;
case 40:return 41
break;
case 41:return 43
break;
case 42:return 39
break;
case 43:return 29
break;
case 44:return 30
break;
case 45:return 33
break;
case 46:return 37
break;
case 47:return 44
break;
case 48:return 45
break;
case 49:return 46
break;
case 50:return 47
break;
case 51:return 48
break;
case 52:return 37
break;
case 53:return 8
break;
case 54:return 8
break;
case 55:return 8
break;
case 56:return 9
break;
case 57:return 9
break;
case 58:return 10
break;
case 59:return 10
break;
case 60:return 11
break;
case 61:return 11
break;
case 62:return 12
break;
case 63:return 12
break;
case 64:return 12
break;
case 65:return 13
break;
case 66:return 14
break;
case 67:return 14
break;
case 68:return 17
break;
case 69:return 17
break;
case 70:return 52
break;
case 71:return 53
break;
case 72:return 72
break;
case 73:return 63
break;
case 74:return 64
break;
case 75:return 65
break;
case 76:return 66
break;
case 77:return 67
break;
case 78:return 55
break;
case 79:return 60
break;
case 80:return 'DEF'
break;
case 81:return 'PROOF'
break;
case 82:return 'END'
break;
case 83:return 'BY'
break;
case 84:return 'VAR'
break;
case 85:return 61
break;
case 86:return 5
break;
case 87:
		      // print("illegal char");  return 'INVALID_CHAR';
		      return "INVALID_CHAR";
		      
break;
}
},
rules: [/^(?:\s+)/,/^(?:\/\/.*)/,/^(?:function\b)/,/^(?:eval\b)/,/^(?:domain\b)/,/^(?:codomain\b)/,/^(?:"([^"\\]|(\\(.|\n)))*")/,/^(?:;)/,/^(?:\|)/,/^(?:\\T\b)/,/^(?:T\b)/,/^(?:\\F\b)/,/^(?:F\b)/,/^(?:\()/,/^(?:\))/,/^(?:\\\{)/,/^(?:\\\})/,/^(?:,)/,/^(?::)/,/^(?:\\times\b)/,/^(?:\/)/,/^(?:-)/,/^(?:\+)/,/^(?:\\cdot\b)/,/^(?:\*)/,/^(?:\^)/,/^(?:\\logeq\b)/,/^(?:<=>)/,/^(?:=)/,/^(?:\\ne\b)/,/^(?:\\ge\b)/,/^(?:>=)/,/^(?:\\le\b)/,/^(?:<=)/,/^(?:<)/,/^(?:>)/,/^(?:\[)/,/^(?:\])/,/^(?:\\integers\b)/,/^(?:\\reals\b)/,/^(?:\\rationals\b)/,/^(?:\\naturals\b)/,/^(?:\\emptyset\b)/,/^(?:\\cup\b)/,/^(?:\\cap\b)/,/^(?:\\powset\b)/,/^(?:\\ldots\b)/,/^(?:\\in\b)/,/^(?:\\subseteq\b)/,/^(?:\\supseteq\b)/,/^(?:\\subset\b)/,/^(?:\\supset\b)/,/^(?:\\ldots\b)/,/^(?:\\vee\b)/,/^(?:vv\b)/,/^(?:or\b)/,/^(?:\\implies\b)/,/^(?:->)/,/^(?:\\bicond\b)/,/^(?:<->)/,/^(?:\\xor\b)/,/^(?:o\+)/,/^(?:\\wedge\b)/,/^(?:\^\^)/,/^(?:and\b)/,/^(?:\\neg\b)/,/^(?:\\forall\b)/,/^(?:AA\b)/,/^(?:\\exists\b)/,/^(?:EE\b)/,/^(?:\\relation\b)/,/^(?:\\to\b)/,/^(?:\\mapsto\b)/,/^(?:\\lambda\b)/,/^(?:if\b)/,/^(?:then\b)/,/^(?:else\b)/,/^(?:endif\b)/,/^(?:\.)/,/^(?:[0-9]+(\.[0-9]+)?\b)/,/^(?:def\b)/,/^(?:proof\b)/,/^(?:end\b)/,/^(?:by\b)/,/^(?:var\b)/,/^(?:[a-zA-Z]([a-zA-Z0-9])*)/,/^(?:$)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"inclusive":true}}
};
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = mathparse;
exports.Parser = mathparse.Parser;
exports.parse = function () { return mathparse.parse.apply(mathparse, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}