doctype transitional
html
  head
    script(src="http://code.jquery.com/jquery-1.9.1.js")
    script(src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.0/jquery-ui.min.js")
    link(rel="stylesheet", href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/smoothness/jquery-ui.css")
    script(src="/javascript/jquery.ui.droppable.patched.js")
    script(src="/javascript/jquery.caret.1.02.js")
    // FROM OLD VERSION The next script tag loads mathjax.  This has to follow the macros, etc.
    script(type="/javascript/text/javascript", src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML")
    script(src="/javascript/blocksworldstandalone.js")
    script(src="/javascript/submitstandalone.js")
    script(src="/javascript/srflaEval.js")
    script(src="/javascript/srflaMathParser.js")
    script(src="/javascript/blocksParser.js")
    script(src="/javascript/displayMath.js")
    // The next script tag defines CS103-specific macros (like \implies) for MathJax.
    script(type="text/x-mathjax-config")
      | MathJax.Hub.Config({
      | TeX: {
      | Macros: {
      | T: "\\\mathbf{T}",
      | F: "\\\mathbf{F}",
      | implies: "\\\to",
      | bicond: "\\\leftrightarrow",
      | xor: "\\\oplus"
      | }
      | }
      | });
    link(rel="stylesheet", type="text/css", href="/stylesheets/blocksStyle.css")
  body
    include partials/navbar
    h3 CS 103 Blocks World
    p
      // <button onclick = "getHelp()">Need help?</button>
      a(href="help.html") Help
      | /
      a(href="examples.html") Examples
    p#instructions
      | Drag and drop the blocks to create a world. Enter a corresponding first order logic formula:
    // MATH ENTRY HELP KEYBOARD
    table(border="0", cellspacing="0", cellpadding="0", height="60")
      tr
        td(valign="center", align="left")
          button#\forall.suggestion(onclick="addSuggestion(event)")
            img#\forall(src="images/forall.gif", height="14", width="14")
          br
          button#\exists.suggestion(onclick="addSuggestion(event)")
            img#\exists(src="images/exists.gif", height="14", width="14")
        td &#160;&#160;&#160;
        td(valign="center", align="left")
          button#x.suggestion.letters(onclick="addSuggestion(event)")
            span#x x
          button#y.suggestion.letters(onclick="addSuggestion(event)")
            span#y y
          br
          button#z.suggestion.letters(onclick="addSuggestion(event)")
            span#z z
          button#w.suggestion.letters(onclick="addSuggestion(event)")
            span#w w
        td &#160;&#160;&#160;
        td(valign="center", align="left")
          button#\vee.suggestion(onclick="addSuggestion(event)")
            img#\vee(src="images/vee.gif", height="14", width="14")
          button#\implies.suggestion(onclick="addSuggestion(event)")
            img#\implies(src="images/implies.gif", height="14", width="14")
          button#\bicond.suggestion(onclick="addSuggestion(event)")
            img#\bicond(src="images/bicond.gif", height="14", width="14")
          button#=.suggestion(onclick="addSuggestion(event)")
            img#=(src="images/equals.gif", height="14", width="12")
          br
          button#\wedge.suggestion(onclick="addSuggestion(event)")
            img#\wedge(src="images/wedge.gif", height="14", width="14")
          button#\xor.suggestion(onclick="addSuggestion(event)")
            img#\xor(src="images/xor.gif", height="14", width="14")
          button#\neg.suggestion(onclick="addSuggestion(event)")
            img#\neg(src="images/neg.gif", height="14", width="14")
          button#\not=.suggestion(onclick="addSuggestion(event)")
            img#\not=(src="images/notequals.gif", height="14", width="12")
        td &#160;&#160;&#160;
        td(valign="center", align="left")
          button#Red(x).suggestion.blockStyle(onclick="addSuggestion(event)")
            span#Red(x) Red(x)
          button#Triangle(x).suggestion.blockStyle(onclick="addSuggestion(event)")
            span#Triangle(x) Triangle(x)
          button#LeftOf(x,y).suggestion.Pos_side(onclick="addSuggestion(event)")
            span#LeftOf(x,y) LeftOf(x,y)
          button#RightOf(x,y).suggestion.Pos_side(onclick="addSuggestion(event)")
            span#RightOf(x,y) RightOf(x,y)
          br
          button#Blue(x).suggestion.blockStyle(onclick="addSuggestion(event)")
            span#Blue(x) Blue(x)
          button#Square(x).suggestion.blockStyle(onclick="addSuggestion(event)")
            span#Square(x) Square(x)
          button#Above(x,y).suggestion.Pos_up(onclick="addSuggestion(event)")
            span#Above(x,y) Above(x,y)
          button#LeftOf(x,y).suggestion.Pos_up(onclick="addSuggestion(event)")
            span#Below(x,y) Below(x,y)
          br
          button#Yellow(x).suggestion.blockStyle(onclick="addSuggestion(event)")
            span#Yellow(x) Yellow(x)
          button#Circle(x).suggestion.blockStyle(onclick="addSuggestion(event)")
            span#Circle(x) Circle(x)
          button#SameRow(x,y).suggestion.Pos_equal(onclick="addSuggestion(event)")
            span#SameRow(x,y) SameRow(x,y)
          button#SameCol(x,y).suggestion.Pos_equal(onclick="addSuggestion(event)")
            span#SameCol(x,y) SameCol(x,y)
    p
      textarea#inputFormula1(cols="83", rows="3")
    p#mathdisplay.indent(style="color: red")
      br
    // CHECK RESULT DISPLAY
    p#checkresult.indent
    // ERROR MESSAGE DISPLAY(space to reserve screen area for later text?)
    pre#error.
      
    // &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    p
      button#check(onclick="submitAndVerify(); saveCheckedFormulas()") Check World
    // BLOCKSWORLD GRID
    table(border="0")
      tr
        td
          table(align="left", cellspacing="0", cellpadding="0", bordercolor="#BDBDBD", border="1")
            tr
              td(style="background-color: white")
                img#0.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#1.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#2.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#3.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#4.block(src="images/whitesquare.gif")
            tr
              td(style="background-color: white")
                img#10.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#11.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#12.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#13.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#14.block(src="images/whitesquare.gif")
            tr
              td(style="background-color: white")
                img#20.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#21.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#22.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#23.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#24.block(src="images/whitesquare.gif")
            tr
              td(style="background-color: white")
                img#30.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#31.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#32.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#33.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#34.block(src="images/whitesquare.gif")
            tr
              td(style="background-color: white")
                img#40.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#41.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#42.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#43.block(src="images/whitesquare.gif")
              td(style="background-color: white")
                img#44.block(src="images/whitesquare.gif")
        td(rowspan="2", valign="top")
          table(align="left", border="0", height="200")
            tr
              td.spacer
          // DRAGGABLE BLOCKS GRID
          table(align="left", border="0", cellspacing="2", cellpadding="0", width="160")
            tr
              td
                img.dragMe.COLOR_red.SHAPE_square(src="images/redsquare.gif")
              td
                img.dragMe.COLOR_red.SHAPE_triangle(src="images/redtriangle.gif")
              td
                img.dragMe.COLOR_red.SHAPE_circle(src="images/redcircle.gif")
            tr
              td
                img.dragMe.COLOR_yellow.SHAPE_square(src="images/yellowsquare.gif")
              td
                img.dragMe.COLOR_yellow.SHAPE_triangle(src="images/yellowtriangle.gif")
              td
                img.dragMe.COLOR_yellow.SHAPE_circle(src="images/yellowcircle.gif")
            tr
              td
                img.dragMe.COLOR_blue.SHAPE_square(src="images/bluesquare.gif")
              td
                img.dragMe.COLOR_blue.SHAPE_triangle(src="images/bluetriangle.gif")
              td
                img.dragMe.COLOR_blue.SHAPE_circle(src="images/bluecircle.gif")
            tr
            tr
              td(colspan="3")
                div(align="left")
                  br
                  button#clearTextbox.clearbutton(onclick="clearTextbox()") Clear Textbox
                  button#resetWorld.clearbutton(onclick="resetWorld()") Clear World
                  button#reset.clearbutton(onclick="resetState()") Reset All

    // CONTENT FOR HELP BOX
    #helpBox
      p
        | You can use the buttons to write a first-order formula.
        | These fill in a text box.  After you learn the notation, you
        | can skip the buttons type your formula directly.  The formula
        | displays below the box in mathematical notation.  The color changes from red to blue when the notation is right.
      p
        | Colored shapes ("blocks") can be moved onto the grid (the "world") using the mouse.
      p
        | Press "Check World" to see whether the formula is true or
        | false given in the world.
      p There must be at least one block in the world.
      p
        | There are many ways to write operators and connectives, including Latex, Asciimath, and a few extensions of our own.
      p
        | The
        i connectives
        | are:
      p        
        table
          tr
            th(align="left") Connective
            th(align="left") Input symbol
          tr
            td \(\neg\)
            td
              code \neg not
          tr
            td \(\wedge\)
            td
              code \wedge ^^ and \and
          tr
            td \(\vee\)
            td
              code \vee vv or \or
          tr
            td \(\implies\)
            td
              code \implies ->;
          tr
            td \(\leftrightarrow\)
            td
              code
                \bicond <->
          tr
            td \(\oplus\)
            td
              code \xor o+ xor
          tr
            td \(\forall x\) where \(x\) is a variable
            td
              code \forall AA 
          tr
            td \(\exists x\) where \(x\) is a variable
            td
              code \exists EE
          tr
            td \(\T\) aka \(\top\)
            td
              code \T
          tr
            td \(\F\) aka \(\bot\)
            td
              code \F
      h3  Examples 
      br
      p
        code
          \forall x (Red(x) \implies \forall y (Below(x,y)))
        br
        code
          \exists x (Red(x) \wedge \forall y (Below(x,y)))
      h3  Common errors 
      ul
        li
          | Syntax errors will print ugly messages that usually do a good job of
          | locating the error, except sometimes for missing right parentheses.
        li
          | Everything is case-sensitive.  Note that all predicates begin with a
          | capital letter (e.g., "Blue" and "LeftOf").  Anything other than the
          | predicates listed above will produce an "undefined error" message.
        li Free variables generate "undefined variable" errors.
